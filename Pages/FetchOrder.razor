@page "/orderlist"


@if (Orders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div style="display: flex; gap: 20px;">
    <div style="flex: 1;">
            <RadzenDataGrid @ref="OrderRef" Density="Density.Compact" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
            ShowPagingSummary="true" Data="@Orders" TItem="OrderCustomer" LogicalFilterOperator="LogicalFilterOperator.Or" Style="margin-top:20px" ColumnWidth="200px" RowSelect="@(args => { orderCustomer = args; UpdateOrderDetails(); })">
        <Columns>

            <RadzenDataGridColumn TItem="OrderCustomer" Property="CustomerName" Title="Customer Name" Width="180px">
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="OrderCustomer" Property="OrderDate" Title="Order Date" Width="180px">
                <Template Context="order">
                    @order.OrderDate.ToString("dd/MM/yyyy")
                </Template>
            </RadzenDataGridColumn>
 
        </Columns>
    </RadzenDataGrid>
    </div>
     
         @if (orderCustomer != null)
            {
            <div style="flex: 0.5;">
                <RadzenDataGrid Density="Density.Compact" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" 
            ShowPagingSummary="true" Data="@(orderDetails)" TItem="OrderDetails" LogicalFilterOperator="LogicalFilterOperator.Or" Style="margin-top:20px" ColumnWidth="150px">
                     <Columns>
        <RadzenDataGridColumn TItem="OrderDetails" Property="ProductName" Title="Product Name" Width="180px"> </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="OrderDetails" Property="UnitPrice" Title="Unit Price" Width="140px"> </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="OrderDetails" Property="Quantity" Title="Quantity" Width="140px"> </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="OrderDetails" Property="TotalPrice" Title="Total Price" Width="140px">
                            <FooterTemplate>
                                Total: <b>@orderDetails.Sum(o => o.TotalPrice)</b>
                            </FooterTemplate>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </div>
            }
    </div>
            

      
}

@code {
    RadzenDataGrid<OrderCustomer> OrderRef;

    OrderCustomer orderCustomer = new OrderCustomer();
    List<OrderCustomer> Orders;
    List<OrderDetails> orderDetails;

    protected override async Task OnInitializedAsync()
    {
        Orders = await orderService.ListAll();
        if (Orders.Count > 0)
        {
            orderCustomer = Orders.FirstOrDefault();
            orderDetails = await orderService.ListOrderDetailsPerCus(orderCustomer.OrderId);

        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            OrderRef.SelectRow(orderCustomer);
        }
    }

    private async Task UpdateOrderDetails()
    {
        if (orderCustomer != null)
        {
            orderDetails = await orderService.ListOrderDetailsPerCus(orderCustomer.OrderId);
            
        }
    }
    
}